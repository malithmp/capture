SMARTFOX for realtime server?


- SALT is not being used!!! 
- Create a standard function and a protocol for the return values from the server to the client/admin/general requests.
	(call a function with certain parameters, for instance if the request passed or failed followed by a custom message/data corresponding to that parameter)
	(
		ex: for arena request failed
			status=false
			extra= "arena does not exists"
		something like this
	)
- Check if user signin still return status=false
	I hardcoded it to return true, so it SHOULD return true. make it so that it will return false if something goes wrong

- All database query strings are built using string concatanation. Change that to the stringbuilder method
MAJOR:
- READ WRITE LOCK 
	: http://www.javacodegeeks.com/2012/04/java-concurrency-with-readwritelock.html
	:http://docs.oracle.com/javase/1.5.0/docs/api/java/util/concurrent/locks/ReadWriteLock.html

- timestamp everything in livedata object so we can do our own garbage cleaning
- SQL exception handling

- keep arena / servlet / arena-servlet mappings in DB too
- Rename servlet to WorkerUnit
CURRENT:
- Test user authentication on actual server
- complete the addUser function (databasehelper)
- implement the access token method (resolver :: only issuing)
- implement the deleteUser function (databasegelper)
- implement the updateUser function (databasehelper)


